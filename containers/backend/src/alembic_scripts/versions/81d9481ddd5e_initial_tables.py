"""initial tables

Revision ID: 81d9481ddd5e
Revises: 
Create Date: 2024-10-28 16:12:44.175299

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = '81d9481ddd5e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table('report',
    sa.Column('id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('nThumbsUp', sa.Integer(), nullable=True),
    sa.Column('reportRating', sa.Integer(), nullable=True),
    sa.Column('reliability', sa.Integer(), nullable=True),
    sa.Column('d_type', sa.String(), nullable=False),
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('wazeData', sa.String(), nullable=False),
    sa.Column('location', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('pubDate', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_report_location', 'report', ['location'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index('idx_report_pubDate', 'report', ['pubDate'], unique=False, postgresql_using='btree')
    op.create_table('signup_token',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token_hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fastapi_user',
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('signup_date', sa.DateTime(), nullable=False),
    sa.Column('token_id', sa.Integer(), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['token_id'], ['signup_token.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fastapi_user_email'), 'fastapi_user', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_fastapi_user_email'), table_name='fastapi_user')
    op.drop_table('fastapi_user')
    op.drop_table('signup_token')
    op.drop_index('idx_report_pubDate', table_name='report', postgresql_using='btree')
    op.drop_geospatial_index('idx_report_location', table_name='report', postgresql_using='gist', column_name='location')
    op.drop_geospatial_table('report')
    # ### end Alembic commands ###
