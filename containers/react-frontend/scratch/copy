import "./styles.css";
import Map, { Layer, MapRef, Source } from "react-map-gl";
import maplibregl from "maplibre-gl";
import "maplibre-gl/dist/maplibre-gl.css";
import { useRef } from "react";
import { FeatureCollection } from "geojson";

export default function App() {
  const mapRef = useRef<MapRef>(null);
  const canvasRef = useRef<any>(null);

  const karlsplatzCoordinates = [16.36949815199489, 48.20070029259148];

  const initialViewState = {
    zoom: 13,
    longitude: karlsplatzCoordinates[0],
    latitude: karlsplatzCoordinates[1]
  };

  const karlsplatzData: FeatureCollection = {
    type: "FeatureCollection",
    features: [
      {
        type: "Feature",
        geometry: {
          type: "Point",
          coordinates: karlsplatzCoordinates // icon position [lng, lat]
        },
        properties: {}
      }
    ]
  };

  const size = 200;

  const handleMapOnLoad = () => {
    const map = mapRef.current?.getMap();
    if (map) {
      // This implements `StyleImageInterface`
      // to draw a pulsing dot icon on the map.
      const pulsingDot = {
        width: size,
        height: size,
        data: new Uint8Array(size * size * 4),

        // Call once before every frame where the icon will be used.
        render() {
          const duration = 1000;
          const t = (performance.now() % duration) / duration;

          const radius = (size / 2) * 0.3;
          const outerRadius = (size / 2) * 0.7 * t + radius;
          const context = canvasRef.current.getContext("2d");

          // Draw the outer circle.
          context.clearRect(0, 0, this.width, this.height);
          context.beginPath();
          context.arc(
            this.width / 2,
            this.height / 2,
            outerRadius,
            0,
            Math.PI * 2
          );
          context.fillStyle = `rgba(255, 200, 200, ${1 - t})`;
          context.fill();

          // Draw the inner circle.
          context.beginPath();
          context.arc(this.width / 2, this.height / 2, radius, 0, Math.PI * 2);
          context.fillStyle = "rgba(255, 100, 100, 1)";
          context.strokeStyle = "white";
          context.lineWidth = 2 + 4 * (1 - t);
          context.fill();
          context.stroke();

          // Update this image's data with data from the canvas.
          this.data = context.getImageData(0, 0, this.width, this.height).data;

          // Continuously repaint the map, resulting
          // in the smooth animation of the dot.
          map.triggerRepaint();

          // Return `true` to let the map know that the image was updated.
          return true;
        }
      };

      map.addImage("pulsing-dot", pulsingDot, {
        pixelRatio: 2
      });
    }
  };

  return (
    <>
      <Map
        initialViewState={initialViewState}
        style={{ height: "100vh" }}
        mapLib={maplibregl}
        mapStyle="https://api.maptiler.com/maps/streets-v2/style.json?key=LiH20XNxcFiTXyT4fgjM"
        ref={mapRef}
        onLoad={handleMapOnLoad}
      >
        <Source id="dot-point" type="geojson" data={karlsplatzData}>
          <Layer
            id="layer-with-pulsing-dot"
            type="symbol"
            source="dot-point"
            layout={{
              "icon-image": "pulsing-dot"
            }}
          />
        </Source>
      </Map>
      <canvas
        ref={canvasRef}
        width={size}
        height={size}
        style={{ display: "none" }}
      />
    </>
  );
}

